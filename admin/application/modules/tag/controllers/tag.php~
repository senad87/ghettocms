<?php

class Tag extends MX_Controller {
	
	private $language_id = 1;
	
	function __construct(){

		parent::__construct();
		$this->load->helper(array('form', 'url'));
		$this->load->helper('login_helper.php');
		$this->lang->load('messages', 'english');
		$this->load->library('form_validation');
		$this->load->library('pagination');
		$this->load->model('Topic_model');
		$this->load->model('Tag_model');
		
		$this->language_id = $this->session->userdata('language_id');
		
		check_login();
	}
	
	/**
	 * 
	 * Display home page with a list of tags
	 * @param int $message
	 * @param int $offset
	 */
	public function index($order="id-desc", $offset=0){
        	
        	/*** this block of code is required on all methods with table module ***/
        	$data['offset'] = $offset;
		$order_array = explode('-', $order);
		$data['orderColumn'] = $order_array[0];
		$data['order'] = $order_array[1];
        	/*** end of table initialization code ***/
        	
        	$topics = $this->Topic_model->get_all_active($this->language_id);
        	$total_rows = $this->Tag_model->get_number_of_active_tags($this->language_id);
        	$per_page = "10";
        	/*** load pagination ***/
		$this->pagination->load_pagination("tag/index/".$order, 4, $total_rows, $per_page);
		/*** end of pagination ***/
			
		$tags = $this->Tag_model->get_active_tags_limited($per_page, $offset, $this->language_id);
        	//$data['tags_data'] = $this->tags_list($tags);
        	//list of all tags for table
        	$data['entries'] = $this->tags_list($tags);
        	//print_r("<pre>");
        	//var_dump($data['entries']);
        	//print_r("</pre>");
        	
        	$data['topics'] = $topics;
        	/*print_r("<pre>");
        	var_dump($data['topics']);
        	print_r("</pre>");*/
        	$data['pagination'] = $this->pagination->create_links();
        	$this->load->view("header_view");
		$this->load->view('tags_home_view', $data);
	}
		
	/**
	 * 
	 * Display page with tags from only one topic
	 * @param int $filter_value
	 * @param int $offset
	 */
	public function filter($filter_value, $offset = 0){
		
		$topics = $this->Topic_model->get_all_active($this->language_id);
		$total_rows = $this->Tag_model->get_number_of_active_tags_by_topic($filter_value);
		$per_page = "10";
		/*** load pagination ***/
		$this->pagination->load_pagination("tag/filter/".$filter_value, 4, $total_rows, $per_page);
		/*** end of pagination ***/
		$tags = $this->Tag_model->get_active_tags_by_topic_limited($filter_value, $per_page, $offset);
		$data['tags_data'] = $this->tags_list($tags);
		$data['selected_topic'] = $filter_value;
		$data['topics'] = $topics;
        	$data['pagination'] = $this->pagination->create_links();
        
        	$this->load->view("header_view");
		$this->load->view('tags_filter_view', $data);
	}
	
	/**
	 * new_tag
	 * Display form for adding new tag
	 *
	 */
	public function createNew(){
	
        	$data['topics'] = $this->Topic_model->get_all_active($this->language_id);
	        $this->load->view('header_view');
			$this->load->view('new_tag_form_view', $data);
	}
	
	/**
	 * add
	 * Get data from POST and call Model to insert data to database
	 */
	public function createNew_post(){
	
		$tag = $this->input->post('tag');
		$topic_id = $this->input->post('topic_id');
		
		$this->form_validation->set_rules('tag', 'Tag', 'required|callback_tagname_check');
		$this->form_validation->set_rules('topic_id', 'Topic', 'required');

		
		if ($this->form_validation->run() == FALSE){
		        //display form again
			$this->load->view("header_view");
			$this->load->view('new_tag_form_view');
	        } else {
		        //insert new topic
		        $tag_id = $this->Tag_model->insert($tag, $topic_id, $this->language_id);
		        //print_r("Insertion successfull!");
		        $this->messages->add('Tag added successfully!', 'success');
		        redirect('/tag');
	        }
		
	}
	
	public function edit($id){
	
        	$tag = $this->Tag_model->get_tag_by_id($id);
        	$topics = $this->Topic_model->get_all_active();
        	
        	$data['tag'] = $tag[0];
        	$data['topics'] = $topics;
        	$this->load->view("header_view");
		$this->load->view('edit_tag_form_view', $data);
        
	}
	
	public function edit_post(){
	
		$tag = $this->input->post('tag');
		$tag_id = $this->input->post('id');
		$topic_id = $this->input->post('topic_id');
		
		$this->form_validation->set_rules('tag', 'Tag', 'required|callback_tagname_check');
		$this->form_validation->set_rules('topic_id', 'Topic', 'required');
		
		if ($this->form_validation->run() == FALSE){
		        $this->edit($tag_id);
	        } else {
		        //insert new topic
		        $tag_id = $this->Tag_model->update($tag_id, $tag, $topic_id);
		        //print_r("Insertion successfull!");
		        redirect('tag/index/3');
	        }
	}
	
	/**
	 *  delete 
	 *
	 * Update status of the tags to 0
	 */
	public function delete(){
		
		$ids = $this->input->post('ids');
	    	$ids = explode(",", $ids);
	    	$count = count($ids);
		foreach ($ids as $id){
		//var_dump($id);
		//TODO: Instead of this do update tag active flag	
		//$this->Entry_model->update_entry_state($id, 1);
		}
		//TODO: change this message to fit this controller
		$this->Tag_model->delete($id, 0);
		$this->messages->add($count.' Tag(s) successfully deleted', 'success');
		
	}
	
	/**
	 * tags_list
	 * Create array of tags with id, tag name, topic name and topic id 
	 *
	 * @param array $tags Array of objects
	 */
	public function tags_list($tags){
		$tags_data = array();
        	foreach($tags as $tag){
                
                	$topic = $this->Topic_model->get_topic_by_id($tag->topic_id);
                	$tags_data[] = array("id"=>$tag->id,
                                             "tag"=>$tag->tag,
                                             "topic_name"=>$topic[0]->name,
                                             "topic_id"=>$topic[0]->id);
        	}
        	return $tags_data;
	}

	public function ajax_get_tag_id_by_name(){
		
		$tag = $this->input->post('tag');
		//TODO: get tag by tag (name)
		$tag_object = $this->Tag_model->get_tag_by_name($tag);
		$tag_id = $tag_object[0]->id;
		echo $tag_id;
		
	}
}
/* End of file tag.php */
/* Location: ./system/application/controllers/tag.php */
